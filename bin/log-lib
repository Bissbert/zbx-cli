#!/usr/bin/env bash
# Shared logging helpers.
# Usage:
#   source bin/log-lib
#   LOG_LEVEL=debug LOG_FILE=/tmp/tool.log
#   log_info "message"; log_error "oops"

set -euo pipefail

: "${LOG_LEVEL:=info}"   # error|warn|info|debug
: "${LOG_FILE:=}"

log__level_to_num() {
  case "${1:-info}" in
    error) echo 0 ;;
    warn)  echo 1 ;;
    info)  echo 2 ;;
    debug) echo 3 ;;
    *)     echo 2 ;;
  esac
}

# Backward-compat alias used in some scripts
level_to_num() { log__level_to_num "$@"; }

# Recompute cached numeric level when LOG_LEVEL changes
log_setup() {
  LOG_LEVEL_NUM="$(log__level_to_num "$LOG_LEVEL")"
}

log_setup

_log() {
  local lvl="${1:-info}"; shift || true
  local msg="$*"
  local lvl_num; lvl_num="$(log__level_to_num "$lvl")"
  [ "$lvl_num" -le "${LOG_LEVEL_NUM}" ] || return 0
  local ts; ts="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
  if [ -n "${LOG_FILE}" ]; then
    printf '%s [%s] %s\n' "$ts" "$lvl" "$msg" >>"$LOG_FILE"
  else
    printf '%s [%s] %s\n' "$ts" "$lvl" "$msg" >&2
  fi
}

log_error(){ _log error "$@"; }
log_warn(){  _log warn  "$@"; }
log_info(){  _log info  "$@"; }
log_debug(){ _log debug "$@"; }
