#!/usr/bin/env bash
set -euo pipefail
# shellcheck disable=SC1007,SC2015,SC1090,SC1091

SD="$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)"; PATH="$SD:$PATH"
# shellcheck source=bin/log-lib
. "$SD/log-lib"
# shellcheck source=bin/zbx-lib
. "$SD/zbx-lib"

usage() {
  cat <<'EOF'
Usage: zbx call <method> [jq-filter]

Low-level JSON-RPC invoker that reads params JSON on stdin and prints results.

Details:
- Reads params JSON from stdin (or '{}' if empty), calls the given Zabbix API method and prints the result.
- Options:
  -r, --raw     Print full API response (not just .result)
  -h, --help    Show this help
- Examples:
  echo '{}' | zbx call apiinfo.version
  echo '{"output":["hostid","host"],"limit":50}' | zbx call host.get '.[] | {hostid,host}'
EOF
}

RAW=0
case "${1:-}" in
  -h|--help) usage; exit 0 ;;
  -r|--raw) RAW=1; shift || true ;;
esac

[ $# -lt 1 ] && { usage; exit 2; }
METHOD="$1"; shift || true
FILTER="${1:-}"

params="$(cat || true)"; [ -n "$params" ] || params='{}'

log_debug "Calling $METHOD (raw=$RAW)"
resp="$(printf '%s' "$params" | zbx_call "$METHOD")"

if [ "$RAW" -eq 1 ]; then
  printf '%s\n' "$resp"
  exit 0
fi

if [ -n "$FILTER" ]; then
  # shellcheck disable=SC2016
  jq -r ".result | $FILTER" <<<"$resp"
else
  jq -r '.result' <<<"$resp"
fi
