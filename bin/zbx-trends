#!/usr/bin/env bash
set -euo pipefail
SD="$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)"; PATH="$SD:$PATH"
. "$SD/log-lib"; . "$SD/zbx-lib"
FORMAT=tsv; HEADERS=0
while [ $# -gt 0 ]; do
  case "${1:-}" in
    --format) FORMAT="${2:-tsv}"; shift ;;
    --headers) HEADERS=1 ;;
    -h|--help)
      cat <<'EOF'
Usage: zbx trends <itemid> <since-epoch> <until-epoch>

Fetch numeric trends to TSV.

Details:
  Output: TSV columns: clock, num, min, avg, max.
  Options:
    --format {tsv|csv|json}  Output format (default: tsv)
    --headers                Print header row (tsv/csv only)
EOF
      exit 0 ;;
    *) break ;;
  esac
  shift || true
done

case "${1:-}" in
  -h|--help)
    cat <<'EOF'
Usage: zbx trends <itemid> <since-epoch> <until-epoch>

Fetch numeric trends to TSV.

Details:
  Output: TSV columns: clock, num, min, avg, max.
  Options:
    --format {tsv|csv|json}  Output format (default: tsv)
    --headers                Print header row (tsv/csv only)
EOF
    exit 0 ;;
esac
itemid="${1:-}"; since="${2:-}"; until="${3:-}"
[ -z "$itemid" ] || [ -z "$since" ] || [ -z "$until" ] && { echo "Usage: $(basename "$0") <itemid> <since-epoch> <until-epoch>"; exit 2; }
resp="$(jq -n --arg itemid "$itemid" --arg since "$since" --arg until "$until" '{output:["clock","num","min","avg","max"], itemids:[$itemid|tonumber], time_from:($since|tonumber), time_till:($until|tonumber), sortfield:"clock", sortorder:"ASC"}' | zbx_call trend.get)"
if [ "$FORMAT" = "json" ]; then jq '.result' <<<"$resp"; exit 0; fi
headers='["clock","num","min","avg","max"]'
rows="$(jq -c '.result | map([.clock,.num,.min,.avg,.max])' <<<"$resp")"
zbx_format_rows "$FORMAT" "$headers" "$rows" "$HEADERS"
